@import 'mixins', 'variables';

html {
  font-family: 'Fredoka One', cursive;
  box-sizing: border-box;
}
*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  overflow-x: hidden;
  height: 100vh;
  background-color: var(--primaryColor);
  background-image: url("data:image/svg+xml,%3Csvg width='96' height='96' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23f1ede1' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E");
}

.l-grid-center {
  @include gridCenter;
}
.l-flex-center {
  @include flexCenter;
}
.l-grid {
  display: grid;
}
.l-flex {
  display: flex;
}
.l-flex-jcc {
  justify-content: center;
}
.l-flex-ais {
  align-items: stretch;
}
.l-gc3 {
  grid-template-columns: repeat(3, 1fr);
}
.l-selfCenter {
  align-self: center;
  justify-self: center;
}
.l-playerOne {
  grid-area: playerOne;
}
.l-board {
  grid-area: board;
}
.l-playerTwo {
  grid-area: playerTwo;
}
.l-actions {
  grid-area: actions;
}

.d-gap1 {
  gap: 1rem;
}
.d-invisible {
  display: none;
}

.cls-1 {
  fill: var(--white);
}

.d-playerTurn {
  transform: scale(1.2);
}

.c-title {
  font-family: 'Alegreya Sans SC', sans-serif;
  margin: 0;
  padding: 1rem;
  text-align: center;
  font-size: clamp(4em, 5vw, 7rem);
  text-shadow: 0 0.5rem 0 var(--secondaryColor);
  color: var(--titleColor);

  &--medium {
    font-size: clamp(2em, 4vw, 3rem);
    text-shadow: 0 0.3rem 0 var(--secondaryColor);
  }
}

.c-names {
  flex-direction: column;
  &__form {
    flex-direction: column;
  }
  &__name {
    color: var(--white);
    font-size: 1.25rem;
  }
  &__input {
    border: 3px solid var(--secondaryColor);
    border-radius: 5px;
    padding: 0.25rem;
    &--firstPlayer {
      border-color: var(--firstPlayer);
    }
    &--secondPlayer {
      border-color: var(--secondPlayer);
    }
  }
}

.c-gameBoard {
  grid-template-areas:
    'playerOne board playerTwo'
    '. actions .';
  &__board {
    grid-template: repeat(3, 1fr) / repeat(3, 1fr);
    border: $boardBorder solid var(--black);
  }

  &__cell {
    cursor: pointer;
    font-size: MIN(25vw, 9rem);
    height: MIN(25vw, 9rem);
    width: MIN(25vw, 9rem);
    border: $boardBorder solid var(--black);
    transition: background-color 300ms;
    background: var(--white);

    &--firstPlayer {
      color: var(--firstPlayer);
    }
    &--secondPlayer {
      color: var(--secondPlayer);
    }

    &.highlight {
      background-color: var(--grey);
    }
  }

  &__result {
    color: var(--white);
    text-align: center;
    font-size: clamp(1.5rem, 5vw, 2rem);
    margin: 1rem 0;
  }
  &__options {
    justify-self: stretch;
    flex-direction: column;
  }
}

.c-player {
  flex-direction: column;
  transition: transform 200ms;

  &__name {
    border: 2px solid var(--white);
    border-radius: 10px;
    padding: 0.5rem 1rem;
    background: var(--secondaryColor);
    color: var(--white);
    &--first {
      background-color: var(--firstPlayer);
    }

    &--second {
      background-color: var(--secondPlayer);
    }
  }
  &__img {
    width: clamp(5rem, 15vw, 8rem);
    padding: 1rem;
    margin-top: 1rem;
    border: 2px solid var(--white);
    border-radius: 50%;
    background: var(--secondaryColor);

    &--first {
      background-color: var(--firstPlayer);
    }

    &--second {
      background-color: var(--secondPlayer);
    }
  }
}

.c-btn {
  padding: 0.5rem 1rem;
  border: 2px solid var(--secondaryColor);
  border-radius: 10px;
  background: var(--titleColor);
  color: var(--secondaryColor);
  box-shadow: 0 0.5rem var(--secondaryColor);
  transition: transform 200ms ease-out;
  align-self: stretch;

  &:hover {
    transform: scale(1.1);
  }
  &:active {
    transform: scale(1);
  }
}

@media screen and (max-width: 50rem) {
  .c-gameBoard {
    grid-template-columns: 1fr 1fr;
    grid-template-rows: repeat(3, auto);
    justify-items: center;
    gap: 1rem;
    grid-template-areas:
      'board board'
      'playerOne playerTwo'
      'actions actions';
    &__options {
      margin: 0 1rem 1rem 1rem;
    }
  }
}
